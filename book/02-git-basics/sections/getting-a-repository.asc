[[_getting_a_repo]]
=== Pravljenje Git repozitorijuma

Možete da pribavite Git projekat na jedan od dva osnovna načina.
Prvi uzima postojeći projekat ili direktorijum i importuje Git u njega.
Drugi klonira postojeći Git repozitorijum sa drugog servera.

==== Inicijalizacija repozitorijuma u postojećem direktorijumu

Ako počinjete da pratite postojeći projekat koristeći Git, treba da odete do direktorijuma projekta i ukucate:

[source,console]
----
$ git init
----

Ovo pravi novi poddirektorijum s imenom `.git` koji sadrži sve neophodne fajlove - skelet za Git repozitorijum.
U ovom trenutku, ništa se još ne prati.
(Pogledajte <<_git_internals>> za više informacija o tome šta su tačno fajlovi koji se nalaze u `.git` direktorijumu koji ste upravo napravili.)(((git commands, init)))

Ako želite da počnete sa kontrolom verzije postojećih fajlova (spram praznog direktorijuma), verovatno bi trebalo da počnete da pratite te fajlove i da učinite inicijalni komit.
To možete postići sa nekoliko `git add` komandi koje specificiraju fajlove koje želite da pratite, a zatim ukucajte komandu `git commit`:

[source,console]
----
$ git add *.c
$ git add LICENSE
$ git commit -m 'inicijalna verzija projekta'
----

Obradićemo šta rade ove komande za koji minut.
Sada imate Git repozitorijum sa praćenim fajlovima i inicijalnim komitom.

[[_git_cloning]]
==== Kloniranje postojećeg repozitorijuma

Ako želite da pribavite kopiju postojećeg Git repozitorijuma -- na primer, projekat kojem biste želeli da doprinesete -- komanda koja vam je potrebna je `git clone`.
Ako ste upoznati sa drugim VCS sistemima kao što je _Subversion_, primetićete da je komanda `clone` a ne `checkout`.
Ovo je bitna razlika - umesto da pravi samo radnu kopiju, Git prima celu kopiju skoro svih podataka koje ima server.
Svaka verzija svakog fajla cele istorije projekta se povlači kada se pokrene `git clone`.
Zapravo, ako dođe do greške na disku sa servera, najčešće možete da iskoristite skoro svaki od klonova koji klijenti imaju da biste vratili server u stanje u kome je bio kada je kloniran (možete da izgubite neka podešavanja sa strane servera, ali svi verzionisani podaci bi bili tu -- pogledajte <<_git_on_the_server>> za više detalja).

Repozitorijum se klonira sa `git clone [url]`.(((git commands, clone)))
Na primer, ako hoćete da klonirate Git vezivnu biblioteku koja se zove _libgit2_, možete to da uradite ovako:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2
----

Ovo pravi direktorijum sa imenom `libgit2`, incijalizuje `.git` direktorijum u njemu, povlači sve podatke sa tog repozitorijuma i čekautuje radnu kopiju poslednje verzije.
Ako odete u novi `libgit2` direktorijum, videćete sve fajlove iz projekta tamo, spremne za rad nad njima ili korišćenje.
Ako želite da klonirate repozitorijum u nešto što se ne zove "libgit2", možete specificirati to pomoću sledeće komande:

[source,console]
----
$ git clone https://github.com/libgit2/libgit2 mylibgit
----

Ta komanda radi isto što i prethodna, s tim što se odredišni direktorijum zove `mylibgit`.

Git ima veliki broj različitih transfer protokola koje možete da koristite.
Prethodni primer koristi `https://` protokol, ali možete da koristite i `git://` ili `korisnik@server:putanja/do/repozitorijuma.git`, koji koristi SSH transfer protokol. <<_git_on_the_server>> će predstaviti sve dostupne opcije koje može imati server za pristupanje Git repozitorijumu, kao i prednosti i mane svakog od njih.
